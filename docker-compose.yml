version: '3.8'

services:
  db:
    image: mysql:8.0.25
    hostname: socketio-db
    container_name: socketio-db
    environment:
      MYSQL_ROOT_PASSWORD: secret
      MYSQL_DATABASE: test
      MYSQL_USER: user
      MYSQL_PASSWORD: secret
    labels:
      SERVICE_NAME: socketio-db
      SERVICE_3306_NAME: socketio-db
    healthcheck:
      test: "/usr/bin/mysql --user=user --password=secret --execute \"SHOW DATABASES;\""
      interval: 3s
      timeout: 3s
      retries: 10
    command: mysqld --character-set-server=utf8 --collation-server=utf8_general_ci --default-authentication-plugin=mysql_native_password --sql-mode=''

  redis:
    image: redis:6.2.5-alpine3.14
    hostname: socketio-redis
    container_name: socketio-redis
    labels:
      SERVICE_NAME: socketio-redis

  mail:
    image: mailhog/mailhog:v1.0.1
    hostname: socketio-mail
    container_name: socketio-mail
    labels:
      SERVICE_NAME: socketio-mail

  app:
    build:
      context: ""
      dockerfile: Dockerfile
      args:
        hostUID: 1000
        hostGID: 1000
    image: socketio-app
    hostname: socketio-app
    container_name: socketio-app
    labels:
      SERVICE_NAME: socketio-app
    depends_on:
      db:
        condition: service_healthy
      mail:
        condition: service_started
      redis:
        condition: service_started
    user: java
    command: sh run.sh
    volumes:
      - ../../app/:/home/java/app
